diff -ur --exclude=.svn --exclude=.git exception_notification/init.rb /home/kburnett/app_launcher/vendor/plugins/exception_notification/init.rb
--- exception_notification/init.rb	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/init.rb	2008-07-07 17:16:52.000000000 -0400
@@ -1 +1,2 @@
 require "action_mailer"
+require 'socket'
diff -ur --exclude=.svn --exclude=.git exception_notification/lib/exception_notifiable.rb /home/kburnett/app_launcher/vendor/plugins/exception_notification/lib/exception_notifiable.rb
--- exception_notification/lib/exception_notifiable.rb	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/lib/exception_notifiable.rb	2008-07-07 17:27:47.000000000 -0400
@@ -59,20 +59,31 @@
   private
 
     def local_request?
+      # We don't want anything to be considered local in production, to be safe
+      return false if RAILS_ENV == 'production'
       remote = IPAddr.new(request.remote_ip)
       !self.class.local_addresses.detect { |addr| addr.include?(remote) }.nil?
     end
 
+    # make 404 and 500 use rails so they're easier to build...
     def render_404
-      respond_to do |type|
-       type.html { render :file => "#{RAILS_ROOT}/public/404.html", :status => "404 Not Found" }
-       type.all  { render :nothing => true, :status => "404 Not Found" }
-      end
+      options = {:template => "error/404", :status => "404 Not Found"}
+      options.merge!(:layout => (error_layout_exists? ? 'error' : false))
+      render(options)
     end
 
     def render_500
-      respond_to do |type|
-        type.html { render :file => "#{RAILS_ROOT}/public/500.html", :status => "500 Error" }
-        type.all  { render :nothing => true, :status => "500 Error" }
-      end
+      options = {:template => "error/500", :status => "500 Error"}
+      options.merge!(:layout => (error_layout_exists? ? 'error' : false))
+      render(options)
     end
@@ -84,16 +95,28 @@
 
     end
 
     def rescue_action_in_public(exception)
+      request.parameters[:format] = 'html' # use html for response despite what the client asks for

         else          
           render_500
+          deliver_exception_email(exception)
+      end
+    rescue => new_exception
+      deliver_exception_email(new_exception)
+      render :text => "<html><body><h1>Application error</h1></body></html>"
+    end
 
-          deliverer = self.class.exception_data
-          data = case deliverer
-            when nil then {}
-            when Symbol then send(deliverer)
-            when Proc then deliverer.call(self)
-          end
+private
 
-          ExceptionNotifier.deliver_exception_notification(exception, self,
-            request, data)
-      end
+  def deliver_exception_email(exception)
+    deliverer = self.class.exception_data
+    data = case deliverer
+      when nil then {}
+      when Symbol then send(deliverer)
+      when Proc then deliverer.call(self)
     end
+
+    ExceptionNotifier.deliver_exception_notification(exception, self, request, (data || {}))
+  end
+
+  # newer versions of rails make layout_list public, but we have to 'send' for viper
+  def error_layout_exists?
+    ActionController::Base.send(:layout_list).any? {|layout| layout =~ %r(app/views/layouts/error\.)}
+  end
 end
diff -ur --exclude=.svn --exclude=.git exception_notification/lib/exception_notifier_helper.rb /home/kburnett/app_launcher/vendor/plugins/exception_notification/lib/exception_notifier_helper.rb
--- exception_notification/lib/exception_notifier_helper.rb	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/lib/exception_notifier_helper.rb	2008-07-07 17:17:16.000000000 -0400
@@ -67,12 +67,12 @@
   end
   
   def filter_sensitive_post_data_parameters(parameters)
-    exclude_raw_post_parameters? ? @controller.send!(:filter_parameters, parameters) : parameters
+    exclude_raw_post_parameters? ? @controller.send(:filter_parameters, parameters) : parameters
   end
   
   def filter_sensitive_post_data_from_env(env_key, env_value)
     return env_value unless exclude_raw_post_parameters?
     return PARAM_FILTER_REPLACEMENT if (env_key =~ /RAW_POST_DATA/i)
-    return @controller.send!(:filter_parameters, {env_key => env_value}).values[0]
+    return @controller.send(:filter_parameters, {env_key => env_value}).values[0]
   end
 end
diff -ur --exclude=.svn --exclude=.git exception_notification/README /home/kburnett/app_launcher/vendor/plugins/exception_notification/README
--- exception_notification/README	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/README	2008-07-07 17:16:52.000000000 -0400
@@ -1,5 +1,7 @@
 = Exception Notifier Plugin for Rails
 
+Originally snagged from http://github.com/rails/exception_notification/tree/master on 20080707 and with a bunch of rs changes.
+
 The Exception Notifier plugin provides a mailer object and a default set of
 templates for sending email notifications when errors occur in a Rails
 application. The plugin is configurable, allowing programmers to specify:
@@ -108,4 +110,4 @@
 in ExceptionNotifiable for an example of how to go about that.
 
 
-Copyright (c) 2005 Jamis Buck, released under the MIT license
\ No newline at end of file
+Copyright (c) 2005 Jamis Buck, released under the MIT license
Only in /home/kburnett/app_launcher/vendor/plugins/exception_notification: RS_LOCAL_CHANGES.diff
diff -ur --exclude=.svn --exclude=.git exception_notification/views/exception_notifier/_environment.rhtml /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/_environment.rhtml
--- exception_notification/views/exception_notifier/_environment.rhtml	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/_environment.rhtml	2008-07-07 17:16:52.000000000 -0400
@@ -1,7 +1,12 @@
 <% max = @request.env.keys.max { |a,b| a.length <=> b.length } -%>
 <% @request.env.keys.sort.each do |key| -%>
-* <%= "%-*s: %s" % [max.length, key, filter_sensitive_post_data_from_env(key, @request.env[key].to_s.strip)] %>
+
+<%# $RAW_POST_DATA contains everything in the post which is duplicated
+    in the other stuff we show and why bother filtering yet another thing. -%>
+<% next if key == 'RAW_POST_DATA' -%>
+
+* <%= "%-*s: %s" % [max.length, key, filter_sensitive_post_data_from_env(key, @request.env[key].to_s.strip).gsub(/password([^=]*)=[^&]*/, 'password\1=[FILTERED]')] %>
 <% end -%>
 
 * Process: <%= $$ %>
-* Server : <%= `hostname -s`.chomp %>
+* Server : <%= Socket.gethostname %>
diff -ur --exclude=.svn --exclude=.git exception_notification/views/exception_notifier/exception_notification.rhtml /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/exception_notification.rhtml
--- exception_notification/views/exception_notifier/exception_notification.rhtml	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/exception_notification.rhtml	2008-07-07 17:16:52.000000000 -0400
@@ -1,4 +1,4 @@
-A <%= @exception.class %> occurred in <%= @controller.controller_name %>#<%= @controller.action_name %>:
+A <%= @exception.class %> occurred in <%= @controller.controller_name %>#<%= @controller.action_name %> on <%= Time.now.to_s %>:
 
   <%= @exception.message %>
   <%= @backtrace.first %>
diff -ur --exclude=.svn --exclude=.git exception_notification/views/exception_notifier/_session.rhtml /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/_session.rhtml
--- exception_notification/views/exception_notifier/_session.rhtml	2008-07-07 17:18:05.000000000 -0400
+++ /home/kburnett/app_launcher/vendor/plugins/exception_notification/views/exception_notifier/_session.rhtml	2008-07-07 17:16:52.000000000 -0400
@@ -1,2 +1,2 @@
 * session id: <%= @request.session.instance_variable_get(:@session_id).inspect %>
-* data: <%= PP.pp(@request.session.instance_variable_get(:@data),"").gsub(/\n/, "\n  ").strip %>
+* data: <%= PP.pp(@request.session.instance_variable_get(:@data),"").gsub(/\n/, "\n  ").strip.gsub(/"number"=>"[^"]+"/, '"number"=>"[FILTERED]"').gsub(/"card_code"=>"[^"]+"/, '"card_code"=>"[FILTERED]"') %>
